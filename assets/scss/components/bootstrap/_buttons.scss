// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  position: relative;
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size(
    $btn-padding-y,
    $btn-padding-x,
    $btn-font-size,
    $btn-line-height,
    $btn-border-radius
  );
  @include transition($btn-transition);
  pointer-events: auto;

  @include hover() {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    // box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    pointer-events: none;
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

    &:active,
    &.active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }

  @include media-breakpoint-down(xl) {
    @include button-size(
      $btn-padding-y * 0.9,
      $btn-padding-x * 0.9,
      $btn-font-size * 0.9,
      $btn-line-height * 0.9,
      $btn-border-radius
    );
  }

  @include media-breakpoint-down(lg) {
    @include button-size(
      $btn-padding-y * 0.8,
      $btn-padding-x * 0.8,
      $btn-font-size * 0.8,
      $btn-line-height * 0.8,
      $btn-border-radius
    );
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

//
// Alternate buttons
//

.btn-gr-primary {
  padding: 8px 14px;
  color: #fff;
  border: none;
  overflow: hidden;
  z-index: 1;
  box-shadow: $box-shadow-sm;
  text-shadow: 0 0 0.5rem rgba(#561c02, 0.6);

  &.btn-sm {
    padding: 6px 8px;
  }

  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 250%;
    transition: left 0.6s cubic-bezier(0.6, 0, 0.4, 1);
    pointer-events: none;
    z-index: -1;
    background: #fe7a20
      linear-gradient(90deg, $primary 0%, $gr-primary 50%, $primary 100%)
      no-repeat;
  }

  &:hover,
  &:focus,
  &.focus {
    color: #fff;
    box-shadow: 0px 1px 0.5rem 0px #fe7a20;

    &:before {
      left: -150%;
    }
  }

  &:disabled,
  &.disabled {
    &:before {
      background: #808080;
    }
  }
}

.btn-primary {
  color: #fff;
  background-color: $primary;
  border-color: $primary;
  box-shadow: $box-shadow-sm;

  &:hover,
  &:focus,
  &.focus {
    color: #fff;
    background-color: darken($primary, 7.5%);
    border-color: darken($primary, 10%);
  }

  &.disabled,
  &:disabled {
    color: darken($primary, 7.5%);
    background-color: darken($primary, 7.5%);
    border-color: darken($primary, 10%);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: #fff;
    background-color: $primary;
    border-color: $primary;
  }
}

.btn-light {
  color: #212529;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
  box-shadow: $box-shadow-sm;

  &:hover,
  &:focus,
  &.focus {
    color: #212529;
    background-color: #e2e6ea;
    border-color: #dae0e5;
  }

  &.disabled,
  &:disabled {
    color: #212529;
    background-color: #f8f9fa;
    border-color: #f8f9fa;
  }
  // &:not(:disabled):not(.disabled):active,
  // &:not(:disabled):not(.disabled).active,
  // .show > &.dropdown-toggle {
  //   color: #fff;
  //   background-color: #545b62;
  //   border-color: #4e555b;
  // }
}

// .btn-secondary {
//   color: #fff;
//   background-color: #6c757d;
//   border-color: #6c757d;

//   &:hover,
//   &:focus,
//   &.focus {
//     color: #fff;
//     background-color: #5a6268;
//     border-color: #545b62;
//   }

//   &.disabled,
//   &:disabled {
//     color: #fff;
//     background-color: #6c757d;
//     border-color: #6c757d;
//   }

//   &:not(:disabled):not(.disabled):active,
//   &:not(:disabled):not(.disabled).active,
//   .show > &.dropdown-toggle {
//     color: #fff;
//     background-color: #545b62;
//     border-color: #4e555b;
//   }
// }

// .btn-success {
//   color: #fff;
//   background-color: #28a745;
//   border-color: #28a745;

//   &:hover,
//   &:focus,
//   &.focus {
//     color: #fff;
//     background-color: #218838;
//     border-color: #1e7e34;
//   }

//   &.disabled,
//   &:disabled {
//     color: #fff;
//     background-color: #28a745;
//     border-color: #28a745;
//   }

//   &:not(:disabled):not(.disabled):active,
//   &:not(:disabled):not(.disabled).active,
//   .show > &.dropdown-toggle {
//     color: #fff;
//     background-color: #1e7e34;
//     border-color: #1c7430;
//   }
// }

// .btn-danger {
//   color: #fff;
//   background-color: $danger;
//   border-color: $danger;

//   &:hover,
//   &:focus,
//   &.focus {
//     color: #fff;
//     background-color: darken($danger, 7.5%);
//     border-color: darken($danger, 10%);
//   }

//   &.disabled,
//   &:disabled {
//     color: #fff;
//     background-color: darken($danger, 7.5%);
//     border-color: darken($danger, 10%);
//   }

//   &:not(:disabled):not(.disabled):active,
//   &:not(:disabled):not(.disabled).active,
//   .show > &.dropdown-toggle {
//     color: #fff;
//     background-color: #bd2130;
//     border-color: #b21f2d;
//   }
// }

.btn-outline-primary {
  color: $primary;
  border-color: $primary;

  &:hover,
  &:focus,
  &.focus {
    color: #fff;
    background-color: darken($primary, 7.5%);
    border-color: darken($primary, 10%);
  }

  &.disabled,
  &:disabled {
    color: darken($primary, 7.5%);
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: #fff;
    background-color: $primary;
    border-color: $primary;
  }
}

.btn-outline-primary-custom {
  color: $primary;
  border-color: $primary;

  &:hover,
  &:focus,
  &.focus {
    color: darken($primary, 10%);
    border-color: darken($primary, 10%);
  }

  &.disabled,
  &:disabled {
    color: darken($primary, 7.5%);
    background-color: transparent;
  }
}

// @each $color, $value in $theme-colors {
//   .btn-#{$color} {
//     @include button-variant($value, $value);
//   }
// }

// @each $color, $value in $theme-colors {
//   .btn-outline-#{$color} {
//     @include button-outline-variant($value);
//   }
// }

//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover() {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}

//
// Button Sizes
//

.btn-lg {
  @include button-size(
    $btn-padding-y-lg,
    $btn-padding-x-lg,
    $btn-font-size-lg,
    $btn-line-height-lg,
    $btn-border-radius-lg
  );

  @include media-breakpoint-down(xl) {
    @include button-size(
      $btn-padding-y-lg * $xl-ratio,
      $btn-padding-x-lg * $xl-ratio,
      $btn-font-size-lg * $xl-ratio,
      $btn-line-height-lg * $xl-ratio,
      $btn-border-radius-lg
    );
  }
}

.btn-sm {
  @include button-size(
    $btn-padding-y-sm,
    $btn-padding-x-sm,
    $btn-font-size-sm,
    $btn-line-height-sm,
    $btn-border-radius-sm
  );
  min-width: 33px;

  @include media-breakpoint-down(xl) {
    @include button-size(
      $btn-padding-y-sm * $xl-ratio,
      $btn-padding-x-sm * $xl-ratio,
      $btn-font-size-sm * 0.9,
      $btn-line-height-sm,
      $btn-border-radius-sm
    );
    min-width: 33px * $xl-ratio;
  }
}

//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type='submit'],
input[type='reset'],
input[type='button'] {
  &.btn-block {
    width: 100%;
  }
}
